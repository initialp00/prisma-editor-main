version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=admin@bahumaish.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/HC_Volume_102507541/letsencrypt:/letsencrypt
    networks:
      - app-network

  portfolio:
    image: portfolio:latest
    restart: always
    ports:
      - "3001:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portfolio.rule=Host(`bahumaish.com`)"
      - "traefik.http.routers.portfolio.entrypoints=websecure"
      - "traefik.http.routers.portfolio.tls.certresolver=myresolver"
      - "traefik.http.services.portfolio.loadbalancer.server.port=3000"
    networks:
      - app-network

  nextjs:
    image: prisma-editor:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
        NEXTAUTH_URL: ${NEXTAUTH_URL}
        GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
        GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        OPEN_AI_API_KEY: ${OPEN_AI_API_KEY}
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - OPEN_AI_API_KEY=${OPEN_AI_API_KEY}
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`prisma-editor.bahumaish.com`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=myresolver"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - /mnt/HC_Volume_102507541/postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge 